# vim:sw=2:ts=2
name: Check, build and deploy
on:
  schedule:
    - cron: '0 * * * *'

jobs:
  check_alpine:
    runs-on: ubuntu-latest
    outputs:
      should-update: ${{ steps.check.outputs.should-update }}
    steps:
      -
        id: check
        name: Check new release
        uses: vilgotf/container-update-action@main
        with:
          baseimage: library/python:3.8-alpine
          image: vilgotf/red-discordbot
          pypi: red-discordbot
  alpine:
    needs: check_alpine
    if: needs.check_alpine.outputs.should-update == 'true'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        tags: [minimal, audio, latest, full]
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.alpine-buildx-cache
          key: ${{ runner.os }}-buildx-alpine-${{ github.run_id }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./Containerfile.alpine
          target: ${{ matrix.tags }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: vilgotf/red-discordbot:${{ matrix.tags }}
          cache-from: type=local,src=/tmp/.alpine-buildx-cache
          cache-to: type=local,dest=/tmp/.alpine-buildx-cache
  check_debian:
    runs-on: ubuntu-latest
    outputs:
      should-update: ${{ steps.check.outputs.should-update }}
    steps:
      -
        id: check
        name: Check new release
        uses: vilgotf/container-update-action@main
        with:
          baseimage: library/python:3.8-slim
          image: vilgotf/red-discordbot:debian
          pypi: red-discordbot
  debian:
    needs: check_debian
    if: needs.check_debian.outputs.should-update == 'true'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        base:
          - { tag: audio-debian, target: audio }
          - { tag: debian, target: audio }
          - { tag: full-debian, target: full }
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.debian-buildx-cache
          key: ${{ runner.os }}-buildx-debian-${{ github.run_id }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./Containerfile.debian
          target: ${{ matrix.base.target }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: vilgotf/red-discordbot:${{ matrix.base.tag }}
          cache-from: type=local,src=/tmp/.debian-buildx-cache
          cache-to: type=local,dest=/tmp/.debian-buildx-cache
