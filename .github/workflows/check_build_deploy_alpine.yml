# vim:sw=2:ts=2
name: check, build and deploy Alpine
on:
  #schedule:
  #- cron: '0 * * * *'
  workflow_dispatch:

jobs:
  # check_alpine:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     should-update: ${{ steps.check.outputs.should-update }}
  #   steps:
  #     -
  #       id: check
  #       name: Check new release
  #       uses: vilgotf/container-update-action@main
  #       with:
  #         baseimage: library/python:3.8-alpine
  #         image: vilgotf/red-discordbot
  #         pypi: red-discordbot
  alpine:
    #needs: check_alpine
    #if: needs.check_alpine.outputs.should-update == 'true'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        tags: [minimal, audio, latest, full]
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./Containerfile.alpine
          target: ${{ matrix.tags }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: vilgotf/red-discordbot:${{ matrix.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
